name: Build and deploy

on: [ push ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew build

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'ci skip')
    steps:
      - uses: actions/checkout@v4
      - name: Set release tag
        run: |
          export TAG_NAME="$(TZ="Europe/Oslo" date +%Y%m%d).$(echo $GITHUB_RUN_NUMBER).$(echo $GITHUB_SHA | cut -c 1-6)"
          echo "RELEASE_TAG=$TAG_NAME" >> $GITHUB_ENV
      - name: Set changelog
        id: changelog
        # (Escape newlines see https://github.com/actions/create-release/issues/25)
        run: |
          text="$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s")"
          echo "CHANGELOG=$text" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_TAG }}
          body: |
            Changes in this Release
            ${{ env.CHANGELOG }}"
          draft: false
          prerelease: false
    outputs:
      tag: ${{ env.RELEASE_TAG }}

  publish:
    runs-on: ubuntu-latest
    needs: release
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/setup-gradle@v3
      - name: publish
        run: ./gradlew -Pversion="$(echo ${{ needs.release.outputs.tag }})" :publish
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}